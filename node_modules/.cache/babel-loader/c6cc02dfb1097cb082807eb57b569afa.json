{"ast":null,"code":"import { localServe } from \"../../Services/LocalServe\";\nimport localStorageServ from \"../../serviceWorker/locaStorage.service\";\nimport { UserDetailModel } from \"../../_core/models/userDetailModel\";\nimport { SET_EDIT_TAM, SET_USER_INFOR } from \"../Constants/userConstant\";\nimport { GET_USER_LIST, LOGIN, SET_USER_ADMIN_LIST, SET_USER_DETAILS_INFOR, SET_USER_DETAILS_TICKET_INFOR } from \"../Constants/userType\";\nlet initialState = {\n  userInfor: localStorageServ.userInfor.get(),\n  userInforDetails: new UserDetailModel(),\n  userInforEditUser: new UserDetailModel(),\n  userInforDetailsTickets: [],\n  userList: []\n};\nexport const userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN:\n      {\n        state.userInfor = action.payload;\n        return { ...state\n        };\n      }\n\n    case SET_USER_INFOR:\n      {\n        state.userInfor = action.payload;\n        localStorageServ.userInfor.set(action.payload);\n        return { ...state\n        };\n      }\n\n    case GET_USER_LIST:\n      {\n        state.userList = action.payload;\n        return { ...state\n        };\n      }\n\n    case SET_USER_ADMIN_LIST:\n      {\n        let cloneArr = [...state.userList];\n        cloneArr.push(action.payload);\n        state.userList = cloneArr;\n        return { ...state\n        };\n      }\n\n    case SET_USER_DETAILS_INFOR:\n      {\n        state.userInforDetails = action.payload;\n        return { ...state\n        };\n      }\n\n    case SET_USER_DETAILS_TICKET_INFOR:\n      {\n        state.userInforDetailsTickets = action.payload;\n        return { ...state\n        };\n      }\n\n    case SET_EDIT_TAM:\n      {\n        state.userInforEditUser = action.payload;\n        return { ...state\n        };\n      }\n\n    default:\n      {\n        return { ...state\n        };\n      }\n  }\n};","map":{"version":3,"sources":["C:/Users/siuhuynh/Desktop/BC-18/DU-AN-CUOI-KHOA/Airbnb-CLone/Air-Bnb-last-master/Air-Bnb-last-master/Air-Bnb-modal/src/redux/Reducers/UserReducer.js"],"names":["localServe","localStorageServ","UserDetailModel","SET_EDIT_TAM","SET_USER_INFOR","GET_USER_LIST","LOGIN","SET_USER_ADMIN_LIST","SET_USER_DETAILS_INFOR","SET_USER_DETAILS_TICKET_INFOR","initialState","userInfor","get","userInforDetails","userInforEditUser","userInforDetailsTickets","userList","userReducer","state","action","type","payload","set","cloneArr","push"],"mappings":"AAAA,SAASA,UAAT,QAA2B,2BAA3B;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AACA,SAASC,eAAT,QAAgC,oCAAhC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,2BAA7C;AACA,SACEC,aADF,EAEEC,KAFF,EAGEC,mBAHF,EAIEC,sBAJF,EAKEC,6BALF,QAMO,uBANP;AAQA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAEV,gBAAgB,CAACU,SAAjB,CAA2BC,GAA3B,EADM;AAEjBC,EAAAA,gBAAgB,EAAE,IAAIX,eAAJ,EAFD;AAGjBY,EAAAA,iBAAiB,EAAE,IAAIZ,eAAJ,EAHF;AAIjBa,EAAAA,uBAAuB,EAAE,EAJR;AAKjBC,EAAAA,QAAQ,EAAE;AALO,CAAnB;AAQA,OAAO,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,KAAL;AAAY;AACVY,QAAAA,KAAK,CAACP,SAAN,GAAkBQ,MAAM,CAACE,OAAzB;AACA,eAAO,EAAE,GAAGH;AAAL,SAAP;AACD;;AACD,SAAKd,cAAL;AAAqB;AACnBc,QAAAA,KAAK,CAACP,SAAN,GAAkBQ,MAAM,CAACE,OAAzB;AACApB,QAAAA,gBAAgB,CAACU,SAAjB,CAA2BW,GAA3B,CAA+BH,MAAM,CAACE,OAAtC;AACA,eAAO,EAAE,GAAGH;AAAL,SAAP;AACD;;AACD,SAAKb,aAAL;AAAoB;AAClBa,QAAAA,KAAK,CAACF,QAAN,GAAiBG,MAAM,CAACE,OAAxB;AACA,eAAO,EAAE,GAAGH;AAAL,SAAP;AACD;;AACD,SAAKX,mBAAL;AAA0B;AACxB,YAAIgB,QAAQ,GAAG,CAAC,GAAGL,KAAK,CAACF,QAAV,CAAf;AACAO,QAAAA,QAAQ,CAACC,IAAT,CAAcL,MAAM,CAACE,OAArB;AACAH,QAAAA,KAAK,CAACF,QAAN,GAAiBO,QAAjB;AACA,eAAO,EAAE,GAAGL;AAAL,SAAP;AACD;;AACD,SAAKV,sBAAL;AAA6B;AAC3BU,QAAAA,KAAK,CAACL,gBAAN,GAAyBM,MAAM,CAACE,OAAhC;AACA,eAAO,EAAE,GAAGH;AAAL,SAAP;AACD;;AACD,SAAKT,6BAAL;AAAoC;AAClCS,QAAAA,KAAK,CAACH,uBAAN,GAAgCI,MAAM,CAACE,OAAvC;AACA,eAAO,EAAE,GAAGH;AAAL,SAAP;AACD;;AAED,SAAKf,YAAL;AAAmB;AACjBe,QAAAA,KAAK,CAACJ,iBAAN,GAA0BK,MAAM,CAACE,OAAjC;AACA,eAAO,EAAE,GAAGH;AAAL,SAAP;AACD;;AAED;AAAS;AACP,eAAO,EAAE,GAAGA;AAAL,SAAP;AACD;AApCH;AAsCD,CAvCM","sourcesContent":["import { localServe } from \"../../Services/LocalServe\";\nimport localStorageServ from \"../../serviceWorker/locaStorage.service\";\nimport { UserDetailModel } from \"../../_core/models/userDetailModel\";\nimport { SET_EDIT_TAM, SET_USER_INFOR } from \"../Constants/userConstant\";\nimport {\n  GET_USER_LIST,\n  LOGIN,\n  SET_USER_ADMIN_LIST,\n  SET_USER_DETAILS_INFOR,\n  SET_USER_DETAILS_TICKET_INFOR,\n} from \"../Constants/userType\";\n\nlet initialState = {\n  userInfor: localStorageServ.userInfor.get(),\n  userInforDetails: new UserDetailModel(),\n  userInforEditUser: new UserDetailModel(),\n  userInforDetailsTickets: [],\n  userList: [],\n};\n\nexport const userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN: {\n      state.userInfor = action.payload;\n      return { ...state };\n    }\n    case SET_USER_INFOR: {\n      state.userInfor = action.payload;\n      localStorageServ.userInfor.set(action.payload);\n      return { ...state };\n    }\n    case GET_USER_LIST: {\n      state.userList = action.payload;\n      return { ...state };\n    }\n    case SET_USER_ADMIN_LIST: {\n      let cloneArr = [...state.userList];\n      cloneArr.push(action.payload);\n      state.userList = cloneArr;\n      return { ...state };\n    }\n    case SET_USER_DETAILS_INFOR: {\n      state.userInforDetails = action.payload;\n      return { ...state };\n    }\n    case SET_USER_DETAILS_TICKET_INFOR: {\n      state.userInforDetailsTickets = action.payload;\n      return { ...state };\n    }\n\n    case SET_EDIT_TAM: {\n      state.userInforEditUser = action.payload;\n      return { ...state };\n    }\n\n    default: {\n      return { ...state };\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}