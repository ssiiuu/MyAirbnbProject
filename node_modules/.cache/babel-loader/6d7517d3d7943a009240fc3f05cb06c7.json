{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siuhuynh\\\\Desktop\\\\BC-18\\\\DU-AN-CUOI-KHOA\\\\Airbnb-CLone\\\\Air-Bnb-last-master\\\\Air-Bnb-last-master\\\\Air-Bnb-modal\\\\src\\\\Page\\\\AdminPages\\\\AdminLocations\\\\UploadLocationImg\\\\UploadLocationImg.js\",\n    _s = $RefreshSig$();\n\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { message, Upload } from \"antd\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getBase64 = (img, callback) => {\n  const reader = new FileReader();\n  reader.addEventListener(\"load\", () => callback(reader.result));\n  reader.readAsDataURL(img);\n};\n\nconst beforeUpload = file => {\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n\n  if (!isJpgOrPng) {\n    message.error(\"You can only upload JPG/PNG file!\");\n  }\n\n  const isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    message.error(\"Image must smaller than 2MB!\");\n  }\n\n  return isJpgOrPng && isLt2M;\n};\n\nconst UploadLocationImg = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [imageUrl, setImageUrl] = useState();\n\n  const handleChange = info => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true);\n      return;\n    }\n\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, url => {\n        setLoading(false);\n        setImageUrl(url);\n      });\n    }\n  };\n\n  const uploadButton = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading ? /*#__PURE__*/_jsxDEV(LoadingOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Upload, {\n    name: \"avatar\",\n    listType: \"picture-card\",\n    className: \"avatar-uploader\",\n    showUploadList: false,\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n    beforeUpload: beforeUpload,\n    onChange: handleChange,\n    children: imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: \"avatar\",\n      style: {\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : uploadButton\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UploadLocationImg, \"ycwfokvvRN06VWzgWJtQm3IhTUc=\");\n\n_c = UploadLocationImg;\nexport default UploadLocationImg;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadLocationImg\");","map":{"version":3,"sources":["C:/Users/siuhuynh/Desktop/BC-18/DU-AN-CUOI-KHOA/Airbnb-CLone/Air-Bnb-last-master/Air-Bnb-last-master/Air-Bnb-modal/src/Page/AdminPages/AdminLocations/UploadLocationImg/UploadLocationImg.js"],"names":["LoadingOutlined","PlusOutlined","message","Upload","React","useState","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJpgOrPng","type","error","isLt2M","size","UploadLocationImg","loading","setLoading","imageUrl","setImageUrl","handleChange","info","status","originFileObj","url","uploadButton","marginTop","width"],"mappings":";;;AAAA,SAASA,eAAT,EAA0BC,YAA1B,QAA8C,mBAA9C;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,MAAhC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,QAAN,KAAmB;AACnC,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,EAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC,MAAMH,QAAQ,CAACC,MAAM,CAACG,MAAR,CAA9C;AACAH,EAAAA,MAAM,CAACI,aAAP,CAAqBN,GAArB;AACD,CAJD;;AAMA,MAAMO,YAAY,GAAIC,IAAD,IAAU;AAC7B,QAAMC,UAAU,GAAGD,IAAI,CAACE,IAAL,KAAc,YAAd,IAA8BF,IAAI,CAACE,IAAL,KAAc,WAA/D;;AAEA,MAAI,CAACD,UAAL,EAAiB;AACfd,IAAAA,OAAO,CAACgB,KAAR,CAAc,mCAAd;AACD;;AAED,QAAMC,MAAM,GAAGJ,IAAI,CAACK,IAAL,GAAY,IAAZ,GAAmB,IAAnB,GAA0B,CAAzC;;AAEA,MAAI,CAACD,MAAL,EAAa;AACXjB,IAAAA,OAAO,CAACgB,KAAR,CAAc,8BAAd;AACD;;AAED,SAAOF,UAAU,IAAIG,MAArB;AACD,CAdD;;AAgBA,MAAME,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,EAAxC;;AAEA,QAAMqB,YAAY,GAAIC,IAAD,IAAU;AAC7B,QAAIA,IAAI,CAACZ,IAAL,CAAUa,MAAV,KAAqB,WAAzB,EAAsC;AACpCL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA;AACD;;AAED,QAAII,IAAI,CAACZ,IAAL,CAAUa,MAAV,KAAqB,MAAzB,EAAiC;AAC/B;AACAtB,MAAAA,SAAS,CAACqB,IAAI,CAACZ,IAAL,CAAUc,aAAX,EAA2BC,GAAD,IAAS;AAC1CP,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,QAAAA,WAAW,CAACK,GAAD,CAAX;AACD,OAHQ,CAAT;AAID;AACF,GAbD;;AAeA,QAAMC,YAAY,gBAChB;AAAA,eACGT,OAAO,gBAAG,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAyB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADnC,eAEE;AACE,MAAA,KAAK,EAAE;AACLU,QAAAA,SAAS,EAAE;AADN,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAYA,sBACE,QAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAC,cAFX;AAGE,IAAA,SAAS,EAAC,iBAHZ;AAIE,IAAA,cAAc,EAAE,KAJlB;AAKE,IAAA,MAAM,EAAC,kDALT;AAME,IAAA,YAAY,EAAElB,YANhB;AAOE,IAAA,QAAQ,EAAEY,YAPZ;AAAA,cASGF,QAAQ,gBACP;AACE,MAAA,GAAG,EAAEA,QADP;AAEE,MAAA,GAAG,EAAC,QAFN;AAGE,MAAA,KAAK,EAAE;AACLS,QAAAA,KAAK,EAAE;AADF;AAHT;AAAA;AAAA;AAAA;AAAA,YADO,GASPF;AAlBJ;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAtDD;;GAAMV,iB;;KAAAA,iB;AAwDN,eAAeA,iBAAf","sourcesContent":["import { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { message, Upload } from \"antd\";\nimport React, { useState } from \"react\";\n\nconst getBase64 = (img, callback) => {\n  const reader = new FileReader();\n  reader.addEventListener(\"load\", () => callback(reader.result));\n  reader.readAsDataURL(img);\n};\n\nconst beforeUpload = (file) => {\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n\n  if (!isJpgOrPng) {\n    message.error(\"You can only upload JPG/PNG file!\");\n  }\n\n  const isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    message.error(\"Image must smaller than 2MB!\");\n  }\n\n  return isJpgOrPng && isLt2M;\n};\n\nconst UploadLocationImg = () => {\n  const [loading, setLoading] = useState(false);\n  const [imageUrl, setImageUrl] = useState();\n\n  const handleChange = (info) => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true);\n      return;\n    }\n\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, (url) => {\n        setLoading(false);\n        setImageUrl(url);\n      });\n    }\n  };\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div\n        style={{\n          marginTop: 8,\n        }}\n      >\n        Upload\n      </div>\n    </div>\n  );\n  return (\n    <Upload\n      name=\"avatar\"\n      listType=\"picture-card\"\n      className=\"avatar-uploader\"\n      showUploadList={false}\n      action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n      beforeUpload={beforeUpload}\n      onChange={handleChange}\n    >\n      {imageUrl ? (\n        <img\n          src={imageUrl}\n          alt=\"avatar\"\n          style={{\n            width: \"100%\",\n          }}\n        />\n      ) : (\n        uploadButton\n      )}\n    </Upload>\n  );\n};\n\nexport default UploadLocationImg;\n"]},"metadata":{},"sourceType":"module"}