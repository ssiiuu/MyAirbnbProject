{"ast":null,"code":"import AxiosServ from \"./axios.service\";\n/* eslint-disable no-useless-constructor */\n\nclass HttpRequestService {\n  constructor() {\n    this.dangNhap = data => {\n      const url = \"/api/auth/login\";\n      return AxiosServ.postMethod(url, data);\n    };\n\n    this.dangKi = data => {\n      const url = \"/api/auth/register\";\n      return AxiosServ.postMethod(url, data);\n    };\n\n    this.layDanhSachPhong = () => {\n      const url = \"/api/rooms\";\n      return AxiosServ.getMethod(url);\n    };\n\n    this.layThongTinPhong = id => {\n      const url = `/api/rooms/${id}`;\n      return AxiosServ.getMethod(url);\n    };\n\n    this.datPhong = data => {\n      const url = `/api/rooms/booking`;\n      return AxiosServ.postMethod(url, data);\n    };\n\n    this.layDanhGiaPhong = id => {\n      const url = `/api/reviews/byRoom?roomId=${id}`;\n      return AxiosServ.getMethod(url);\n    };\n\n    this.layVeDaDangKi = id => {\n      const url = `/api/tickets/by-user?userId=${id}`;\n      return AxiosServ.getMethod(url);\n    };\n\n    this.loginUser = data => {\n      const uri = `/api/auth/login`;\n      return AxiosServ.postMethod(uri, data);\n    };\n\n    this.getUserList = function () {\n      let user = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\n      if (user.trim() !== \"\") {\n        const uri = `/api/users/pagination?name=${user}`;\n        return AxiosServ.getMethod(uri);\n      }\n\n      const uri = `/api/users/pagination`;\n      return AxiosServ.getMethod(uri);\n    };\n\n    this.addUserAdmin = data => {\n      const uri = \"/api/users\";\n      return AxiosServ.postMethod(uri, data);\n    };\n\n    this.getUserInfor = id => {\n      const uri = `/api/users/${id}`;\n      return AxiosServ.getMethod(uri, id);\n    };\n\n    this.getListTicketsByUser = userId => {\n      const uri = `/api/tickets/by-user?userId=${userId}`;\n      return AxiosServ.getMethod(uri, userId);\n    };\n\n    this.updateUserInfor = (data, id) => {\n      const uri = `/api/users/${id}`;\n      return AxiosServ.putMethod(uri, data);\n    };\n\n    this.deleteUser = id => {\n      const uri = `/api/users/${id}`;\n      return AxiosServ.deleteMothod(uri, id);\n    };\n\n    this.updateAvatarUser = (avatar, id) => {\n      const uri = `/api/users/upload-avatar`;\n      return AxiosServ.postMethod(uri, avatar);\n    };\n\n    this.getLocationList = function () {\n      let location = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\n      if (location.trim() !== \"\") {\n        const uri = `/api/locations?location=${location}`;\n        return AxiosServ.getMethod(uri);\n      }\n\n      const uri = `/api/locations`;\n      return AxiosServ.getMethod(uri);\n    };\n\n    this.addLocation = data => {\n      const uri = \"/api/locations\";\n      return AxiosServ.postMethod(uri, data);\n    };\n\n    this.getLocationDetail = id => {\n      const uri = `/api/locations/${id}`;\n      return AxiosServ.getMethod(uri, id);\n    };\n\n    this.updateLocationDetail = (data, id) => {\n      const uri = `/api/locations/${id}`;\n      return AxiosServ.putMethod(uri, data);\n    };\n\n    this.deleteLocation = id => {\n      const uri = `/api/locations/${id}`;\n      return AxiosServ.deleteMothod(uri, id);\n    };\n\n    this.updateImgLocation = (locationImg, id) => {\n      const uri = `/api/locations/upload-images/${id}`;\n      return AxiosServ.postMethod(uri, locationImg);\n    };\n\n    this.getRoomList = function () {\n      let locationId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\n      if (locationId.trim() !== \"\") {\n        const uri = `/api/rooms?locationId=${locationId}`;\n        return AxiosServ.getMethod(uri);\n      }\n\n      const uri = `/api/rooms`;\n      return AxiosServ.getMethod(uri);\n    };\n\n    this.addRoom = data => {\n      const uri = `/api/rooms`;\n      return AxiosServ.postMethod(uri, data);\n    };\n\n    this.getRoomDetail = id => {\n      const uri = `/api/rooms/${id}`;\n      return AxiosServ.getMethod(uri, id);\n    };\n\n    this.updateRoomDetail = (data, id) => {\n      const uri = `/api/rooms/${id}`;\n      return AxiosServ.putMethod(uri, data);\n    };\n\n    this.deleteRoom = id => {\n      const uri = `/api/rooms/${id}`;\n      return AxiosServ.deleteMothod(uri, id);\n    };\n\n    this.updateImgRoom = (roomImg, id) => {\n      const uri = `/api/rooms/upload-image/${id}`;\n      return AxiosServ.postMethod(uri, roomImg);\n    };\n\n    this.getValueateListByRoom = function () {\n      let roomId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\n      if (roomId !== \"\") {\n        const uri = `/api/reviews/byRoom?roomId=${roomId}`;\n        return AxiosServ.getMethod(uri, roomId);\n      } else {\n        const uri = `/api/reviews/byRoom`;\n        return AxiosServ.getMethod(uri);\n      }\n    };\n\n    this.addValueateByRoom = (data, roomId) => {\n      const uri = `/api/reviews?roomId=${roomId}`;\n      return AxiosServ.postMethod(uri, data);\n    };\n\n    this.deleteValueateByRoom = valueateId => {\n      const uri = `/api/reviews/${valueateId}`;\n      return AxiosServ.deleteMothod(uri);\n    };\n\n    this.getValueateDetail = valueateId => {\n      const uri = `/api/reviews/${valueateId}`;\n      return AxiosServ.getMethod(uri);\n    };\n\n    this.updateValueateDetail = (data, valueateId) => {\n      const uri = `/api/reviews/${valueateId}`;\n      return AxiosServ.putMethod(uri, data);\n    };\n\n    this.getListTickets = () => {\n      const uri = `/api/tickets`;\n      return AxiosServ.getMethod(uri);\n    };\n  } // user Log\n\n\n}\n\nconst httpServ = new HttpRequestService();\nexport default httpServ;","map":{"version":3,"sources":["C:/Users/siuhuynh/Desktop/BC-18/DU-AN-CUOI-KHOA/Airbnb-CLone/Air-Bnb-last-master/Air-Bnb-last-master/Air-Bnb-modal/src/serviceWorker/http.service.js"],"names":["AxiosServ","HttpRequestService","constructor","dangNhap","data","url","postMethod","dangKi","layDanhSachPhong","getMethod","layThongTinPhong","id","datPhong","layDanhGiaPhong","layVeDaDangKi","loginUser","uri","getUserList","user","trim","addUserAdmin","getUserInfor","getListTicketsByUser","userId","updateUserInfor","putMethod","deleteUser","deleteMothod","updateAvatarUser","avatar","getLocationList","location","addLocation","getLocationDetail","updateLocationDetail","deleteLocation","updateImgLocation","locationImg","getRoomList","locationId","addRoom","getRoomDetail","updateRoomDetail","deleteRoom","updateImgRoom","roomImg","getValueateListByRoom","roomId","addValueateByRoom","deleteValueateByRoom","valueateId","getValueateDetail","updateValueateDetail","getListTickets","httpServ"],"mappings":"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","sourcesContent":["import AxiosServ from \"./axios.service\";\n\n/* eslint-disable no-useless-constructor */\nclass HttpRequestService {\n  constructor() {}\n\n  // user Log\n\n  dangNhap = (data) => {\n    const url = \"/api/auth/login\";\n\n    return AxiosServ.postMethod(url, data);\n  };\n\n  dangKi = (data) => {\n    const url = \"/api/auth/register\";\n\n    return AxiosServ.postMethod(url, data);\n  };\n\n  // user phong\n\n  layDanhSachPhong = () => {\n    const url = \"/api/rooms\";\n\n    return AxiosServ.getMethod(url);\n  };\n\n  layThongTinPhong = (id) => {\n    const url = `/api/rooms/${id}`;\n\n    return AxiosServ.getMethod(url);\n  };\n\n  datPhong=(data)=>{\n    const url=`/api/rooms/booking`;\n    return AxiosServ.postMethod(url,data);\n  }\n\n  layDanhGiaPhong = (id) => {\n    const url = `/api/reviews/byRoom?roomId=${id}`;\n\n    return AxiosServ.getMethod(url);\n  };\n\n  layVeDaDangKi = (id) => {\n    const url = `/api/tickets/by-user?userId=${id}`;\n\n    return AxiosServ.getMethod(url);\n  };\n\n  //user services\n  loginUser = (data) => {\n    const uri = `/api/auth/login`;\n    return AxiosServ.postMethod(uri, data);\n  };\n\n  getUserList = (user = \"\") => {\n    if (user.trim() !== \"\") {\n      const uri = `/api/users/pagination?name=${user}`;\n      return AxiosServ.getMethod(uri);\n    }\n    const uri = `/api/users/pagination`;\n    return AxiosServ.getMethod(uri);\n  };\n\n  addUserAdmin = (data) => {\n    const uri = \"/api/users\";\n\n    return AxiosServ.postMethod(uri, data);\n  };\n\n  getUserInfor = (id) => {\n    const uri = `/api/users/${id}`;\n    return AxiosServ.getMethod(uri, id);\n  };\n\n  getListTicketsByUser = (userId) => {\n    const uri = `/api/tickets/by-user?userId=${userId}`;\n    return AxiosServ.getMethod(uri, userId);\n  };\n\n  updateUserInfor = (data, id) => {\n    const uri = `/api/users/${id}`;\n    return AxiosServ.putMethod(uri, data);\n  };\n\n  deleteUser = (id) => {\n    const uri = `/api/users/${id}`;\n    return AxiosServ.deleteMothod(uri, id);\n  };\n  updateAvatarUser = (avatar, id) => {\n    const uri = `/api/users/upload-avatar`;\n    return AxiosServ.postMethod(uri, avatar);\n  };\n\n  // location services\n  \n  getLocationList = (location = \"\") => {\n    if (location.trim() !== \"\") {\n      const uri = `/api/locations?location=${location}`;\n      return AxiosServ.getMethod(uri);\n    }\n    const uri = `/api/locations`;\n    return AxiosServ.getMethod(uri);\n  };\n  addLocation = (data) => {\n    const uri = \"/api/locations\";\n    return AxiosServ.postMethod(uri, data);\n  };\n  getLocationDetail = (id) => {\n    const uri = `/api/locations/${id}`;\n    return AxiosServ.getMethod(uri, id);\n  };\n  updateLocationDetail = (data, id) => {\n    const uri = `/api/locations/${id}`;\n    return AxiosServ.putMethod(uri, data);\n  };\n  deleteLocation = (id) => {\n    const uri = `/api/locations/${id}`;\n    return AxiosServ.deleteMothod(uri, id);\n  };\n  updateImgLocation = (locationImg, id) => {\n    const uri = `/api/locations/upload-images/${id}`;\n    return AxiosServ.postMethod(uri, locationImg);\n  };\n\n  //rooms services\n  getRoomList = (locationId = \"\") => {\n    if (locationId.trim() !== \"\") {\n      const uri = `/api/rooms?locationId=${locationId}`;\n      return AxiosServ.getMethod(uri);\n    }\n    const uri = `/api/rooms`;\n    return AxiosServ.getMethod(uri);\n  };\n  addRoom = (data) => {\n    const uri = `/api/rooms`;\n    return AxiosServ.postMethod(uri, data);\n  };\n  getRoomDetail = (id) => {\n    const uri = `/api/rooms/${id}`;\n    return AxiosServ.getMethod(uri, id);\n  };\n  updateRoomDetail = (data, id) => {\n    const uri = `/api/rooms/${id}`;\n    return AxiosServ.putMethod(uri, data);\n  };\n  deleteRoom = (id) => {\n    const uri = `/api/rooms/${id}`;\n    return AxiosServ.deleteMothod(uri, id);\n  };\n  updateImgRoom = (roomImg, id) => {\n    const uri = `/api/rooms/upload-image/${id}`;\n    return AxiosServ.postMethod(uri, roomImg);\n  };\n\n  // Valueate Services\n  getValueateListByRoom = (roomId = \"\") => {\n    if (roomId !== \"\") {\n      const uri = `/api/reviews/byRoom?roomId=${roomId}`;\n      return AxiosServ.getMethod(uri, roomId);\n    } else {\n      const uri = `/api/reviews/byRoom`;\n      return AxiosServ.getMethod(uri);\n    }\n  };\n  addValueateByRoom = (data, roomId) => {\n    const uri = `/api/reviews?roomId=${roomId}`;\n    return AxiosServ.postMethod(uri, data);\n  };\n  deleteValueateByRoom = (valueateId) => {\n    const uri = `/api/reviews/${valueateId}`;\n    return AxiosServ.deleteMothod(uri);\n  };\n  getValueateDetail = (valueateId) => {\n    const uri = `/api/reviews/${valueateId}`;\n    return AxiosServ.getMethod(uri);\n  };\n  updateValueateDetail = (data, valueateId) => {\n    const uri = `/api/reviews/${valueateId}`;\n    return AxiosServ.putMethod(uri, data);\n  };\n\n  //Tickets services\n  getListTickets = () => {\n    const uri = `/api/tickets`;\n    return AxiosServ.getMethod(uri);\n  };\n}\n\nconst httpServ = new HttpRequestService();\n\nexport default httpServ;\n"]},"metadata":{},"sourceType":"module"}