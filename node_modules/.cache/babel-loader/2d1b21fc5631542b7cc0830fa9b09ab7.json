{"ast":null,"code":"/* eslint-disable no-useless-constructor */\nclass LocalStorageKey {\n  constructor() {\n    this.TOKEN = \"TOKEN\";\n    this.USER_INFOR = \"USER_INFOR\";\n  }\n\n}\n\nclass BaseStorage {\n  constructor(_key) {\n    this.set = value => {\n      const dataString = JSON.stringify(value);\n      localStorage.setItem(this.key, dataString);\n    };\n\n    this.get = () => {\n      const dataString = localStorage.getItem(this.key);\n      return !dataString ? null : JSON.parse(dataString);\n    };\n\n    this.remove = () => {\n      localStorage.removeItem(this.key);\n    };\n\n    this.key = _key;\n  }\n\n}\n\nclass LocalStorageService extends LocalStorageKey {\n  constructor() {\n    super();\n\n    this.clearLocalStorage = () => {\n      localStorage.clear();\n    };\n\n    this.token = new BaseStorage(this.TOKEN);\n    this.userInfor = new BaseStorage(this.USER_INFOR);\n  }\n\n}\n\nconst localStorageServ = new LocalStorageService();\nexport default localStorageServ;","map":{"version":3,"sources":["C:/Users/siuhuynh/Desktop/BC-18/DU-AN-CUOI-KHOA/Airbnb-CLone/Air-Bnb-last-master/Air-Bnb-last-master/Air-Bnb-modal/src/serviceWorker/locaStorage.service.js"],"names":["LocalStorageKey","TOKEN","USER_INFOR","BaseStorage","constructor","_key","set","value","dataString","JSON","stringify","localStorage","setItem","key","get","getItem","parse","remove","removeItem","LocalStorageService","clearLocalStorage","clear","token","userInfor","localStorageServ"],"mappings":"AAAA;AACA,MAAMA,eAAN,CAAsB;AAAA;AAAA,SACpBC,KADoB,GACZ,OADY;AAAA,SAEpBC,UAFoB,GAEP,YAFO;AAAA;;AAAA;;AAKtB,MAAMC,WAAN,CAAkB;AAGhBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAAA,SAIlBC,GAJkB,GAIXC,KAAD,IAAW;AACf,YAAMC,UAAU,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAnB;AACAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAAKC,GAA1B,EAA+BL,UAA/B;AACD,KAPiB;;AAAA,SASlBM,GATkB,GASZ,MAAM;AACV,YAAMN,UAAU,GAAGG,YAAY,CAACI,OAAb,CAAqB,KAAKF,GAA1B,CAAnB;AACA,aAAO,CAACL,UAAD,GAAc,IAAd,GAAqBC,IAAI,CAACO,KAAL,CAAWR,UAAX,CAA5B;AACD,KAZiB;;AAAA,SAclBS,MAdkB,GAcT,MAAM;AACbN,MAAAA,YAAY,CAACO,UAAb,CAAwB,KAAKL,GAA7B;AACD,KAhBiB;;AAChB,SAAKA,GAAL,GAAWR,IAAX;AACD;;AALe;;AAsBlB,MAAMc,mBAAN,SAAkCnB,eAAlC,CAAkD;AAChDI,EAAAA,WAAW,GAAG;AACZ;;AADY,SAIdgB,iBAJc,GAIM,MAAM;AACxBT,MAAAA,YAAY,CAACU,KAAb;AACD,KANa;;AAAA,SAWdC,KAXc,GAWN,IAAInB,WAAJ,CAAgB,KAAKF,KAArB,CAXM;AAAA,SAYdsB,SAZc,GAYF,IAAIpB,WAAJ,CAAgB,KAAKD,UAArB,CAZE;AAEb;;AAH+C;;AAgBlD,MAAMsB,gBAAgB,GAAG,IAAIL,mBAAJ,EAAzB;AAEA,eAAeK,gBAAf","sourcesContent":["/* eslint-disable no-useless-constructor */\nclass LocalStorageKey {\n  TOKEN = \"TOKEN\";\n  USER_INFOR = \"USER_INFOR\";\n}\n\nclass BaseStorage {\n  key;\n\n  constructor(_key) {\n    this.key = _key;\n  }\n\n  set = (value) => {\n    const dataString = JSON.stringify(value);\n    localStorage.setItem(this.key, dataString);\n  };\n\n  get = () => {\n    const dataString = localStorage.getItem(this.key);\n    return !dataString ? null : JSON.parse(dataString);\n  };\n\n  remove = () => {\n    localStorage.removeItem(this.key);\n  };\n}\n\nclass LocalStorageService extends LocalStorageKey {\n  constructor() {\n    super();\n  }\n\n  clearLocalStorage = () => {\n    localStorage.clear();\n  };\n  /**\n   * access token storage\n   */\n\n  token = new BaseStorage(this.TOKEN);\n  userInfor = new BaseStorage(this.USER_INFOR);\n}\n\nconst localStorageServ = new LocalStorageService();\n\nexport default localStorageServ;\n"]},"metadata":{},"sourceType":"module"}