{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\siuhuynh\\\\Desktop\\\\BC-18\\\\DU-AN-CUOI-KHOA\\\\My-Airbnb-Project\\\\src\\\\components\\\\spinnerLoading\\\\SpinnerLoading.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PuffLoader from \"react-spinners/PuffLoader\";\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SpinnerLoading() {\n  _s();\n\n  const override = {\n    display: \"block\",\n    margin: \"0 auto\",\n    borderColor: \"red\"\n  };\n  let [color, setColor] = useState(\"#F31158\");\n  let isLoading = useSelector(state => state.spinnerReducer.isLoading);\n  return isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed w-screen h-screen bg-white flex justify-center items-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(PuffLoader, {\n      color: color,\n      loading: isLoading,\n      cssOverride: override,\n      size: 60\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(SpinnerLoading, \"YlAUR3M0fdrK+9vMt7HCKxxmScc=\", false, function () {\n  return [useSelector];\n});\n\n_c = SpinnerLoading;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpinnerLoading\");","map":{"version":3,"sources":["C:/Users/siuhuynh/Desktop/BC-18/DU-AN-CUOI-KHOA/My-Airbnb-Project/src/components/spinnerLoading/SpinnerLoading.js"],"names":["React","useState","PuffLoader","useSelector","SpinnerLoading","override","display","margin","borderColor","color","setColor","isLoading","state","spinnerReducer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAIA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,QAAMC,QAAQ,GAAI;AAChBC,IAAAA,OAAO,EAAE,OADO;AAEhBC,IAAAA,MAAM,EAAE,QAFQ;AAGhBC,IAAAA,WAAW,EAAE;AAHG,GAAlB;AAKA,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,SAAD,CAAhC;AACE,MAAIU,SAAS,GAACR,WAAW,CAAES,KAAD,IAASA,KAAK,CAACC,cAAN,CAAqBF,SAA/B,CAAzB;AACF,SAAOA,SAAS,gBACd;AAAK,IAAA,SAAS,EAAC,wEAAf;AAAA,2BACM,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEF,KAAnB;AAA0B,MAAA,OAAO,EAAEE,SAAnC;AAA8C,MAAA,WAAW,EAAEN,QAA3D;AAAqE,MAAA,IAAI,EAAE;AAA3E;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,UADc,gBAIb,qCAJH;AAKD;;GAbuBD,c;UAOND,W;;;KAPMC,c","sourcesContent":["import React, { useState } from 'react'\nimport PuffLoader from \"react-spinners/PuffLoader\";\nimport { useSelector } from 'react-redux';\n\n\n\nexport default function SpinnerLoading() {\n  const override  = {\n    display: \"block\",\n    margin: \"0 auto\",\n    borderColor: \"red\",\n  };\n  let [color, setColor] = useState(\"#F31158\");\n    let isLoading=useSelector((state)=>state.spinnerReducer.isLoading)\n  return isLoading ? (\n    <div className=\"fixed w-screen h-screen bg-white flex justify-center items-center z-50\">\n          <PuffLoader color={color} loading={isLoading} cssOverride={override} size={60} />\n    </div>\n  ):(<></>);\n}\n"]},"metadata":{},"sourceType":"module"}