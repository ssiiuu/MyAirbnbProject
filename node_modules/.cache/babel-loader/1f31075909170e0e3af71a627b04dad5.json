{"ast":null,"code":"import { SET_SPINNER_END, SET_SPINNER_START } from \"../Constants/spinnerConstant\";\nlet initailState = {\n  isLoading: false,\n  count: 0\n};\nexport const spinnerReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initailState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_SPINNER_START:\n      {\n        state.count++;\n        state.isLoading = true;\n        return { ...state\n        };\n      }\n\n    case SET_SPINNER_END:\n      {\n        state.count--;\n\n        if (state.count === 0) {\n          state.isLoading = false;\n        }\n\n        return { ...state\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};","map":{"version":3,"sources":["C:/Users/siuhuynh/Desktop/BC-18/DU-AN-CUOI-KHOA/Airbnb-CLone/Air-Bnb-last-master/Air-Bnb-last-master/Air-Bnb-modal/src/redux/Reducers/spinnerReducer.js"],"names":["SET_SPINNER_END","SET_SPINNER_START","initailState","isLoading","count","spinnerReducer","state","action","type"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,iBAA1B,QAAmD,8BAAnD;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,SAAS,EAAE,KADI;AAEfC,EAAAA,KAAK,EAAE;AAFQ,CAAnB;AAKA,OAAO,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,iBAAL;AAAwB;AACpBK,QAAAA,KAAK,CAACF,KAAN;AAEAE,QAAAA,KAAK,CAACH,SAAN,GAAkB,IAAlB;AACA,eAAO,EAAE,GAAGG;AAAL,SAAP;AACH;;AAED,SAAKN,eAAL;AAAsB;AAClBM,QAAAA,KAAK,CAACF,KAAN;;AAEA,YAAIE,KAAK,CAACF,KAAN,KAAgB,CAApB,EAAuB;AACnBE,UAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACH;;AACD,eAAO,EAAE,GAAGG;AAAL,SAAP;AACH;;AAED;AACI,aAAO,EAAE,GAAGA;AAAL,OAAP;AAlBR;AAoBH,CArBM","sourcesContent":["import { SET_SPINNER_END, SET_SPINNER_START } from \"../Constants/spinnerConstant\";\n\n\nlet initailState = {\n    isLoading: false,\n    count: 0,\n};\n\nexport const spinnerReducer = (state = initailState, action) => {\n    switch (action.type) {\n        case SET_SPINNER_START: {\n            state.count++;\n\n            state.isLoading = true;\n            return { ...state };\n        }\n\n        case SET_SPINNER_END: {\n            state.count--;\n\n            if (state.count === 0) {\n                state.isLoading = false;\n            }\n            return { ...state };\n        }\n\n        default:\n            return { ...state };\n    }\n}"]},"metadata":{},"sourceType":"module"}