{"ast":null,"code":"import { GET_USER_LIST, LOGIN, SET_USER_ADMIN_LIST, SET_USER_DETAILS_INFOR, SET_USER_DETAILS_TICKET_INFOR } from \"../Constants/userType\";\nimport { message } from \"antd\";\nimport { history } from \"../../App\";\nimport httpServ from \"../../serviceWorker/http.service\";\nimport localStorageServ from \"../../serviceWorker/locaStorage.service\";\nimport { SET_EDIT_TAM, SET_USER_INFOR } from \"../Constants/userConstant\";\nexport const loginUserAction = data => {\n  return dispatch => {\n    httpServ.loginUser(data).then(res => {\n      message.success(\"Đăng nhập thành công!\");\n      dispatch({\n        type: LOGIN,\n        payload: res.data.user\n      });\n      localStorageServ.userInfor.set(res.data.user);\n      localStorageServ.token.set(res.data.token);\n      setTimeout(() => {\n        history.push(\"/\");\n      }, 1000);\n    }).catch(err => {\n      console.log(\"err\", err);\n      message.error(\"Tài khoản hoặc mật khẩu không đúng!\");\n      history.push(\"/login\");\n    });\n  };\n};\nexport const getUserListAction = function () {\n  let user = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return dispatch => {\n    httpServ.getUserList(user).then(res => {\n      dispatch({\n        type: GET_USER_LIST,\n        payload: res.data\n      });\n    }).catch(err => {\n      console.log(\"err\", err);\n    });\n  };\n};\nexport const addUserAdminAction = data => {\n  return dispatch => {\n    httpServ.addUserAdmin(data).then(res => {\n      message.success(\"Thêm thành công\");\n      dispatch({\n        type: SET_USER_ADMIN_LIST,\n        payload: res.data\n      });\n      setTimeout(() => {\n        history.push(\"/admin/user\");\n      }, 1000);\n    }).catch(err => {\n      console.log(\"err\", err);\n    });\n  };\n};\nexport const deleteUserAction = id => {\n  return dispatch => {\n    httpServ.deleteUser(id).then(res => {\n      message.success(\"Xóa thành công!\");\n      dispatch(getUserListAction());\n    }).catch(err => {\n      console.log(\"err\", err);\n    });\n  };\n};\nexport const getUserInforAction = id => {\n  return dispatch => {\n    httpServ.getUserInfor(id).then(res => {\n      dispatch({\n        type: SET_USER_DETAILS_INFOR,\n        payload: res.data\n      });\n      dispatch({\n        type: SET_EDIT_TAM,\n        payload: res.data\n      });\n    }).catch(err => {\n      console.log(\"err\", err);\n    });\n  };\n};\nexport const getListTicketsByUserAction = id => {\n  return dispatch => {\n    httpServ.getListTicketsByUser(id).then(res => {\n      dispatch({\n        type: SET_USER_DETAILS_TICKET_INFOR,\n        payload: res.data\n      });\n    }).catch(err => {\n      console.log(\"err\", err);\n    });\n  };\n};\nexport const updateUserInforAction = (value, id) => {\n  return dispatch => {\n    httpServ.updateUserInfor(value, id).then(res => {\n      message.success(\"Cập nhật thành công\");\n    }).catch(err => {\n      console.log(\"err\", err);\n    });\n  };\n};\nexport const updateAvatarUserAction = (avatar, id) => {\n  return dispatch => {\n    httpServ.updateAvatarUser(avatar).then(res => {\n      dispatch({\n        type: SET_USER_INFOR,\n        payload: res.data\n      });\n      history.push(`/profile/${id}`);\n      message.success(\"Cập nhật ảnh đại diện thành công\");\n    }).catch(err => {\n      console.log(\"err\", err);\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/siuhuynh/Desktop/BC-18/DU-AN-CUOI-KHOA/My-Airbnb-Project/src/redux/Actions/userAction.js"],"names":["GET_USER_LIST","LOGIN","SET_USER_ADMIN_LIST","SET_USER_DETAILS_INFOR","SET_USER_DETAILS_TICKET_INFOR","message","history","httpServ","localStorageServ","SET_EDIT_TAM","SET_USER_INFOR","loginUserAction","data","dispatch","loginUser","then","res","success","type","payload","user","userInfor","set","token","setTimeout","push","catch","err","console","log","error","getUserListAction","getUserList","addUserAdminAction","addUserAdmin","deleteUserAction","id","deleteUser","getUserInforAction","getUserInfor","getListTicketsByUserAction","getListTicketsByUser","updateUserInforAction","value","updateUserInfor","updateAvatarUserAction","avatar","updateAvatarUser"],"mappings":"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","sourcesContent":["import {\n  GET_USER_LIST,\n  LOGIN,\n  SET_USER_ADMIN_LIST,\n  SET_USER_DETAILS_INFOR,\n  SET_USER_DETAILS_TICKET_INFOR,\n} from \"../Constants/userType\";\nimport { message } from \"antd\";\nimport { history } from \"../../App\";\nimport httpServ from \"../../serviceWorker/http.service\";\nimport localStorageServ from \"../../serviceWorker/locaStorage.service\";\nimport { SET_EDIT_TAM, SET_USER_INFOR } from \"../Constants/userConstant\";\n\nexport const loginUserAction = (data) => {\n  return (dispatch) => {\n    httpServ\n      .loginUser(data)\n      .then((res) => {\n        message.success(\"Đăng nhập thành công!\");\n        dispatch({\n          type: LOGIN,\n          payload: res.data.user,\n        });\n        localStorageServ.userInfor.set(res.data.user);\n        localStorageServ.token.set(res.data.token);\n        setTimeout(() => {\n          history.push(\"/\");\n        }, 1000);\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        message.error(\"Tài khoản hoặc mật khẩu không đúng!\");\n        history.push(\"/login\");\n      });\n  };\n};\n\nexport const getUserListAction = (user = \"\") => {\n  return (dispatch) => {\n    httpServ\n      .getUserList(user)\n      .then((res) => {\n        dispatch({\n          type: GET_USER_LIST,\n          payload: res.data,\n        });\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n      });\n  };\n};\n\nexport const addUserAdminAction = (data) => {\n  return (dispatch) => {\n    httpServ\n      .addUserAdmin(data)\n      .then((res) => {\n        message.success(\"Thêm thành công\");\n        dispatch({\n          type: SET_USER_ADMIN_LIST,\n          payload: res.data,\n        });\n        setTimeout(() => {\n          history.push(\"/admin/user\");\n        }, 1000);\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n      });\n  };\n};\n\nexport const deleteUserAction = (id) => {\n  return (dispatch) => {\n    httpServ\n      .deleteUser(id)\n      .then((res) => {\n        message.success(\"Xóa thành công!\");\n        dispatch(getUserListAction());\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n      });\n  };\n};\n\nexport const getUserInforAction = (id) => {\n  return (dispatch) => {\n    httpServ\n      .getUserInfor(id)\n      .then((res) => {\n        dispatch({\n          type: SET_USER_DETAILS_INFOR,\n          payload: res.data,\n        });\n        dispatch({\n          type: SET_EDIT_TAM,\n          payload: res.data,\n        });\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n      });\n  };\n};\n\nexport const getListTicketsByUserAction = (id) => {\n  return (dispatch) => {\n    httpServ\n      .getListTicketsByUser(id)\n      .then((res) => {\n        dispatch({\n          type: SET_USER_DETAILS_TICKET_INFOR,\n          payload: res.data,\n        });\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n      });\n  };\n};\n\nexport const updateUserInforAction = (value, id) => {\n  return (dispatch) => {\n    httpServ\n      .updateUserInfor(value, id)\n      .then((res) => {\n        message.success(\"Cập nhật thành công\");\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n      });\n  };\n};\n\nexport const updateAvatarUserAction = (avatar, id) => {\n  return (dispatch) => {\n    httpServ\n      .updateAvatarUser(avatar)\n      .then((res) => {\n        dispatch({\n          type: SET_USER_INFOR,\n          payload: res.data,\n        });\n        history.push(`/profile/${id}`);\n        message.success(\"Cập nhật ảnh đại diện thành công\");\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}