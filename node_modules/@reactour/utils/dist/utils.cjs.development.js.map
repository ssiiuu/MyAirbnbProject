{"version":3,"file":"utils.cjs.development.js","sources":["../src/Portal.tsx","../src/Observables.tsx","../src/useRect.tsx","../src/smoothScroll.tsx","../src/index.tsx"],"sourcesContent":["import React, { useLayoutEffect, useState, useRef, ReactChild } from 'react'\nimport { createPortal } from 'react-dom'\n\nconst Portal: React.FC<PortalProps> = ({\n  children,\n  type = 'reactour-portal',\n}) => {\n  let mountNode = useRef<HTMLDivElement | null>(null)\n  let portalNode = useRef<Element | null>(null)\n  let [, forceUpdate] = useState({})\n\n  useLayoutEffect(() => {\n    if (!mountNode.current) return\n\n    const ownerDocument = mountNode.current!.ownerDocument\n    portalNode.current = ownerDocument?.createElement(type)!\n    ownerDocument!.body.appendChild(portalNode.current)\n    forceUpdate({})\n\n    return () => {\n      if (portalNode.current && portalNode.current.ownerDocument) {\n        portalNode.current.ownerDocument.body.removeChild(portalNode.current)\n      }\n    }\n  }, [type])\n\n  return portalNode.current ? (\n    createPortal(children, portalNode.current)\n  ) : (\n    <span ref={mountNode} />\n  )\n}\n\nexport type PortalProps = {\n  children?: ReactChild\n  type?: string\n}\n\nexport default Portal\n","import React, { useRef, useEffect, useState } from 'react'\nimport useMutationObserver from '@rooks/use-mutation-observer'\nimport ResizeObserver from 'resize-observer-polyfill'\n\nconst Observables: React.FC<ObservablesProps> = ({\n  mutationObservables,\n  resizeObservables,\n  refresh,\n}) => {\n  const [mutationsCounter, setMutationsCounter] = useState(0)\n  const ref = useRef(document.documentElement || document.body)\n\n  function refreshHighlightedRegionIfObservable(nodes: NodeList) {\n    const posibleNodes = Array.from(nodes)\n    for (const node of posibleNodes) {\n      if (mutationObservables) {\n        if (!(node as Element).attributes) {\n          continue\n        }\n        const found = mutationObservables.find((observable: string) =>\n          (node as Element).matches(observable)\n        )\n\n        if (found) {\n          refresh(true)\n        }\n      }\n    }\n  }\n\n  function incrementMutationsCounterIfObservable(nodes: NodeList) {\n    const posibleNodes = Array.from(nodes)\n    for (const node of posibleNodes) {\n      if (resizeObservables) {\n        if (!(node as Element).attributes) {\n          continue\n        }\n        const found = resizeObservables.find((observable: string) =>\n          (node as Element).matches(observable)\n        )\n\n        if (found) setMutationsCounter(mutationsCounter + 1)\n      }\n    }\n  }\n\n  useMutationObserver(\n    ref,\n    (mutationList: MutationRecord[]) => {\n      for (const mutation of mutationList) {\n        if (mutation.addedNodes.length !== 0) {\n          refreshHighlightedRegionIfObservable(mutation.addedNodes)\n          incrementMutationsCounterIfObservable(mutation.addedNodes)\n        }\n\n        if (mutation.removedNodes.length !== 0) {\n          refreshHighlightedRegionIfObservable(mutation.removedNodes)\n          incrementMutationsCounterIfObservable(mutation.removedNodes)\n        }\n      }\n    },\n    { childList: true, subtree: true }\n  )\n\n  useEffect(() => {\n    if (!resizeObservables) {\n      return\n    }\n\n    const resizeObserver: ResizeObserver = new ResizeObserver(() => {\n      refresh()\n    })\n\n    for (const observable of resizeObservables) {\n      const element = document.querySelector(observable)\n      if (element) {\n        resizeObserver.observe(element)\n      }\n    }\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [resizeObservables, mutationsCounter])\n\n  return null\n}\n\ntype ObservablesProps = {\n  mutationObservables?: string[]\n  resizeObservables?: string[]\n  refresh?: any\n}\n\nexport default Observables\n","import { useEffect, useCallback, useState } from 'react'\n\nexport function getRect<T extends Element>(\n  element?: T | undefined | null\n): RectResult {\n  let rect: RectResult = {\n    bottom: 0,\n    height: 0,\n    left: 0,\n    right: 0,\n    top: 0,\n    width: 0,\n  }\n  if (element) {\n    const domRect: DOMRect = element.getBoundingClientRect()\n    rect = {\n      bottom: domRect.bottom,\n      height: domRect.height,\n      left: domRect.left,\n      right: domRect.right,\n      top: domRect.top,\n      width: domRect.width,\n    }\n  }\n  return rect\n}\n\nexport function useRect<T extends Element>(\n  ref: React.RefObject<T> | undefined,\n  refresher?: any\n): RectResult {\n  const [dimensions, setdDimensions] = useState(initialState)\n  const handleResize = useCallback(() => {\n    if (!ref?.current) return\n    setdDimensions(getRect(ref?.current))\n  }, [ref?.current])\n\n  useEffect(() => {\n    handleResize()\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [ref?.current, refresher])\n\n  return dimensions\n}\n\nexport function useElemRect(\n  elem: Element | undefined,\n  refresher?: any\n): RectResult {\n  const [dimensions, setdDimensions] = useState(initialState)\n  const handleResize = useCallback(() => {\n    if (!elem) return\n    setdDimensions(getRect(elem))\n  }, [elem])\n\n  useEffect(() => {\n    handleResize()\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [elem, refresher])\n\n  return dimensions\n}\n\nconst initialState = {\n  bottom: 0,\n  height: 0,\n  left: 0,\n  right: 0,\n  top: 0,\n  width: 0,\n}\n\nexport type RectResult = {\n  bottom: number\n  height: number\n  left: number\n  right: number\n  top: number\n  width: number\n}\n","// https://stackoverflow.com/questions/46795955/how-to-know-scroll-to-element-is-done-in-javascript\nexport function smoothScroll(\n  elem: Element | null,\n  options: ScrollIntoViewOptions\n) {\n  return new Promise(resolve => {\n    if (!(elem instanceof Element)) {\n      throw new TypeError('Argument 1 must be an Element')\n    }\n    let same = 0\n    let lastPos: undefined | null | number = null\n    const scrollOptions = Object.assign({ behavior: 'smooth' }, options)\n\n    elem.scrollIntoView(scrollOptions)\n    requestAnimationFrame(check)\n\n    function check() {\n      const newPos = elem?.getBoundingClientRect().top\n      if (newPos === lastPos) {\n        if (same++ > 2) {\n          return resolve(null)\n        }\n      } else {\n        same = 0\n        lastPos = newPos\n      }\n      requestAnimationFrame(check)\n    }\n  })\n}\n","import Portal from './Portal'\nimport Observables from './Observables'\nimport { useRect, useElemRect, RectResult, getRect } from './useRect'\nimport { smoothScroll } from './smoothScroll'\n\nexport function safe(sum: number): number {\n  return sum < 0 ? 0 : sum\n}\n\nfunction getInViewThreshold(threshold: InViewArgs['threshold']) {\n  if (typeof threshold === 'object' && threshold !== null) {\n    return {\n      thresholdX: threshold.x || 0,\n      thresholdY: threshold.y || 0,\n    }\n  }\n  return {\n    thresholdX: threshold || 0,\n    thresholdY: threshold || 0,\n  }\n}\n\nexport function getWindow(): { w: number; h: number } {\n  const w = Math.max(\n    document.documentElement.clientWidth,\n    window.innerWidth || 0\n  )\n  const h = Math.max(\n    document.documentElement.clientHeight,\n    window.innerHeight || 0\n  )\n  return { w, h }\n}\n\nexport function inView({\n  top,\n  right,\n  bottom,\n  left,\n  threshold,\n}: InViewArgs): boolean {\n  const { w: windowWidth, h: windowHeight } = getWindow()\n  const { thresholdX, thresholdY } = getInViewThreshold(threshold)\n\n  return top < 0 && bottom - top > windowHeight\n    ? true\n    : top >= 0 + thresholdY &&\n        left >= 0 + thresholdX &&\n        bottom <= windowHeight - thresholdY &&\n        right <= windowWidth - thresholdX\n}\n\ntype InViewArgs = RectResult & {\n  threshold?: { x?: number; y?: number } | number\n}\n\nexport const isHoriz = (pos: string) => /(left|right)/.test(pos)\nexport const isOutsideX = (val: number, windowWidth: number): boolean => {\n  return val > windowWidth\n}\nexport const isOutsideY = (val: number, windowHeight: number): boolean => {\n  return val > windowHeight\n}\n\nexport function bestPositionOf(positions: PositionsObjectType): string[] {\n  return Object.keys(positions)\n    .map(p => {\n      return {\n        position: p,\n        value: positions[p],\n      }\n    })\n    .sort((a, b) => b.value - a.value)\n    .map(p => p.position)\n}\n\nconst defaultPadding = 10\n\nexport function getPadding(\n  padding: number | [number, number] = defaultPadding\n) {\n  if (Array.isArray(padding)) {\n    return padding[0]\n      ? [padding[0], padding[1] ? padding[1] : padding[0]]\n      : [defaultPadding, defaultPadding]\n  }\n  return [padding, padding]\n}\n\nexport type PositionsType = 'left' | 'right' | 'top' | 'bottom'\n\nexport type PositionsObjectType = {\n  [position: string]: number\n}\n\nexport type CoordType = number[]\n\nexport type CoordsObjectType = {\n  [position: string]: CoordType\n}\n\nexport {\n  Portal,\n  Observables,\n  useRect,\n  useElemRect,\n  RectResult,\n  getRect,\n  smoothScroll,\n}\n"],"names":["Portal","children","type","mountNode","useRef","portalNode","useState","forceUpdate","useLayoutEffect","current","ownerDocument","createElement","body","appendChild","removeChild","createPortal","React","ref","Observables","mutationObservables","resizeObservables","refresh","mutationsCounter","setMutationsCounter","document","documentElement","refreshHighlightedRegionIfObservable","nodes","posibleNodes","Array","from","node","attributes","found","find","observable","matches","incrementMutationsCounterIfObservable","useMutationObserver","mutationList","mutation","addedNodes","length","removedNodes","childList","subtree","useEffect","resizeObserver","ResizeObserver","element","querySelector","observe","disconnect","getRect","rect","bottom","height","left","right","top","width","domRect","getBoundingClientRect","useRect","refresher","initialState","dimensions","setdDimensions","handleResize","useCallback","window","addEventListener","removeEventListener","useElemRect","elem","smoothScroll","options","Promise","resolve","Element","TypeError","same","lastPos","scrollOptions","Object","assign","behavior","scrollIntoView","requestAnimationFrame","check","newPos","safe","sum","getInViewThreshold","threshold","thresholdX","x","thresholdY","y","getWindow","w","Math","max","clientWidth","innerWidth","h","clientHeight","innerHeight","inView","windowWidth","windowHeight","isHoriz","pos","test","isOutsideX","val","isOutsideY","bestPositionOf","positions","keys","map","p","position","value","sort","a","b","defaultPadding","getPadding","padding","isArray"],"mappings":"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"}