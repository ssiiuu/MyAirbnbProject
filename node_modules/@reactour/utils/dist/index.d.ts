import Portal from './Portal';
import Observables from './Observables';
import { useRect, useElemRect, RectResult, getRect } from './useRect';
import { smoothScroll } from './smoothScroll';
export declare function safe(sum: number): number;
export declare function getWindow(): {
    w: number;
    h: number;
};
export declare function inView({ top, right, bottom, left, threshold, }: InViewArgs): boolean;
declare type InViewArgs = RectResult & {
    threshold?: {
        x?: number;
        y?: number;
    } | number;
};
export declare const isHoriz: (pos: string) => boolean;
export declare const isOutsideX: (val: number, windowWidth: number) => boolean;
export declare const isOutsideY: (val: number, windowHeight: number) => boolean;
export declare function bestPositionOf(positions: PositionsObjectType): string[];
export declare function getPadding(padding?: number | [number, number]): number[];
export declare type PositionsType = 'left' | 'right' | 'top' | 'bottom';
export declare type PositionsObjectType = {
    [position: string]: number;
};
export declare type CoordType = number[];
export declare type CoordsObjectType = {
    [position: string]: CoordType;
};
export { Portal, Observables, useRect, useElemRect, RectResult, getRect, smoothScroll, };
