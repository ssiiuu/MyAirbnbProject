{"version":3,"file":"popover.cjs.production.min.js","sources":["../src/styles.tsx","../src/Popover.tsx"],"sourcesContent":["export type StylesKeys = 'popover'\n\nexport type StylesObj = {\n  [key in StylesKeys]?: StyleFn\n}\n\nexport type StyleFn = (\n  props: { [key: string]: any },\n  state?: { [key: string]: any }\n) => React.CSSProperties\n\nexport type Styles = {\n  popover: StyleFn\n}\n\nexport type StyleKey = keyof Styles\n\nexport const defaultStyles: Styles = {\n  popover: () => ({\n    position: 'fixed',\n    maxWidth: 353,\n    // minWidth: 150,\n    backgroundColor: '#fff',\n    padding: '24px 30px',\n    boxShadow: '0 0.5em 3em rgba(0, 0, 0, 0.3)',\n    color: 'inherit',\n    zIndex: 100000,\n    transition: 'transform 0.3s',\n    top: 0,\n    left: 0,\n  }),\n}\n\nexport type getStylesType = (key: StylesKeys, extra?: any) => {}\n\nexport function stylesMatcher(styles: StylesObj) {\n  return (key: StyleKey, state: {}): {} => {\n    const base = defaultStyles[key](state)\n    const custom = styles[key]\n    return custom ? custom(base, state) : base\n  }\n}\n","/** @jsx jsx */ import { jsx } from '@emotion/react'\nimport React, { useRef } from 'react'\nimport {\n  useRect,\n  isHoriz,\n  bestPositionOf,\n  isOutsideX,\n  isOutsideY,\n  PositionsObjectType,\n  CoordsObjectType,\n  CoordType,\n  getWindow,\n  getPadding,\n  RectResult,\n} from '@reactour/utils'\n\nimport { StylesObj, stylesMatcher } from './styles'\n\nconst Popover: React.FC<PopoverProps> = ({\n  children,\n  position: providedPosition = 'bottom',\n  padding = 10,\n  styles = {},\n  sizes,\n  refresher,\n  ...props\n}) => {\n  const helperRef = useRef(null)\n  const positionRef = useRef('')\n  const verticalAlignRef = useRef('')\n  const horizontalAlignRef = useRef('')\n  const { w: windowWidth, h: windowHeight } = getWindow()\n  const getStyles = stylesMatcher(styles)\n\n  const { width: helperWidth, height: helperHeight } = useRect(\n    helperRef,\n    refresher\n  )\n\n  const targetLeft = sizes?.left\n  const targetTop = sizes?.top\n  const targetRight = sizes?.right\n  const targetBottom = sizes?.bottom\n\n  const position =\n    providedPosition && typeof providedPosition === 'function'\n      ? providedPosition({\n          width: helperWidth,\n          height: helperHeight,\n          windowWidth,\n          windowHeight,\n          top: targetTop,\n          left: targetLeft,\n          right: targetRight,\n          bottom: targetBottom,\n        })\n      : providedPosition\n\n  const available: PositionsObjectType = {\n    left: targetLeft,\n    right: windowWidth - targetRight,\n    top: targetTop,\n    bottom: windowHeight - targetBottom,\n  }\n\n  const [px, py] = getPadding(padding)\n\n  const couldPositionAt = (position: string) => {\n    return (\n      available[position] >\n      (isHoriz(position) ? helperWidth + px * 2 : helperHeight + py * 2)\n    )\n  }\n\n  const autoPosition = (coords: CoordsObjectType): CoordType => {\n    const positionsOrder: string[] = bestPositionOf(available)\n    for (let j = 0; j < positionsOrder.length; j++) {\n      if (couldPositionAt(positionsOrder[j])) {\n        positionRef.current = positionsOrder[j]\n        return coords[positionsOrder[j]]\n      }\n    }\n    positionRef.current = 'center'\n    return coords.center\n  }\n\n  const pos = (helperPosition: Position) => {\n    if (Array.isArray(helperPosition)) {\n      const isOutX = isOutsideX(helperPosition[0], windowWidth)\n      const isOutY = isOutsideY(helperPosition[1], windowHeight)\n\n      // if (isOutX) warn('x', helperPosition[0])\n      // if (isOutY) warn('y', helperPosition[1])\n      positionRef.current = 'custom'\n      return [\n        isOutX ? windowWidth / 2 - helperWidth / 2 : helperPosition[0],\n        isOutY ? windowHeight / 2 - helperHeight / 2 : helperPosition[1],\n      ]\n    }\n\n    const hX = isOutsideX(targetLeft + helperWidth, windowWidth)\n      ? targetRight - helperWidth + px\n      : targetLeft - px\n    const x = hX > px ? hX : px\n    const hY = isOutsideY(targetTop + helperHeight, windowHeight)\n      ? targetBottom - helperHeight + py\n      : targetTop - py\n    const y = hY > py ? hY : py\n\n    if (isOutsideY(targetTop + helperHeight, windowHeight)) {\n      verticalAlignRef.current = 'bottom'\n    } else {\n      verticalAlignRef.current = 'top'\n    }\n    if (isOutsideX(targetLeft + helperWidth, windowWidth)) {\n      horizontalAlignRef.current = 'left'\n    } else {\n      horizontalAlignRef.current = 'right'\n    }\n\n    const coords = {\n      top: [x, targetTop - helperHeight - py * 2],\n      right: [targetRight + px * 2, y],\n      bottom: [x, targetBottom + py * 2],\n      left: [targetLeft - helperWidth - px * 2, y],\n      center: [\n        windowWidth / 2 - helperWidth / 2,\n        windowHeight / 2 - helperHeight / 2,\n      ],\n    }\n    if (helperPosition === 'center' || couldPositionAt(helperPosition)) {\n      positionRef.current = helperPosition\n      return coords[helperPosition]\n    }\n    return autoPosition(coords)\n  }\n\n  const p = pos(position)\n\n  return (\n    <div\n      css={{\n        ...getStyles('popover', {\n          position: positionRef.current,\n          verticalAlign: verticalAlignRef.current,\n          horizontalAlign: horizontalAlignRef.current,\n        }),\n        transform: `translate(${Math.round(p[0])}px, ${Math.round(p[1])}px)`,\n      }}\n      ref={helperRef}\n      {...props}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default Popover\n\nexport type PopoverProps = {\n  sizes: RectResult\n  children?: React.ReactNode\n  position?: PositionType\n  padding?: number | [number, number]\n  styles?: StylesObj\n  className?: string\n  refresher?: any\n}\n\nexport type PositionType =\n  | Position\n  | ((postionsProps: PositionProps) => Position)\n\nexport type PositionProps = RectResult & {\n  windowWidth: number\n  windowHeight: number\n}\n\nexport type Position =\n  | 'top'\n  | 'right'\n  | 'bottom'\n  | 'left'\n  | 'center'\n  | [number, number]\n\n// const warn = (axis: 'x' | 'y', num: number) => {\n//   console.warn(`${axis}:${num} is outside window, falling back to center`)\n// }\n"],"names":["defaultStyles","popover","position","maxWidth","backgroundColor","padding","boxShadow","color","zIndex","transition","top","left","Popover","children","providedPosition","styles","sizes","refresher","props","helperRef","useRef","positionRef","verticalAlignRef","horizontalAlignRef","getWindow","windowWidth","w","windowHeight","h","getStyles","key","state","base","custom","stylesMatcher","useRect","helperWidth","width","helperHeight","height","targetLeft","targetTop","targetRight","right","targetBottom","bottom","available","getPadding","px","py","couldPositionAt","isHoriz","p","helperPosition","Array","isArray","isOutX","isOutsideX","isOutY","isOutsideY","current","hX","x","hY","y","coords","center","positionsOrder","bestPositionOf","j","length","autoPosition","pos","jsx","css","verticalAlign","horizontalAlign","transform","Math","round","ref"],"mappings":"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"}