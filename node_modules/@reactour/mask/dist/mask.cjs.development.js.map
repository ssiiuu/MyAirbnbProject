{"version":3,"file":"mask.cjs.development.js","sources":["../src/styles.tsx","../src/Mask.tsx"],"sourcesContent":["import { CSSObject } from '@emotion/react'\n\nexport type StyleFn = (props: StyleFnProps, state?: StyleFnProps) => CSSObject\n\nexport type StyleFnProps = CSSObject &\n  Partial<{\n    x: number\n    y: number\n    windowWidth: number\n    windowHeight: number\n    maskID: string\n    clipID: string\n  }>\n\nexport type Styles = {\n  maskWrapper: StyleFn\n  maskArea: StyleFn\n  maskRect: StyleFn\n  clickArea: StyleFn\n  highlightedArea: StyleFn\n}\n\nexport type StylesObj = Partial<Styles>\n\nexport type StyleKey = keyof Styles\n\n/**\n * @deprecated Use `StyleKey` alias instead.\n */\nexport type StylesKeys = StyleKey\n\nexport const defaultStyles: Styles = {\n  maskWrapper: () => ({\n    opacity: 0.7,\n    left: 0,\n    top: 0,\n    position: 'fixed',\n    zIndex: 99999,\n    pointerEvents: 'none',\n    color: '#000',\n  }),\n  maskArea: ({ x, y, width, height }) => ({\n    x,\n    y,\n    width,\n    height,\n    fill: 'black',\n    rx: 0,\n  }),\n  maskRect: ({ windowWidth, windowHeight, maskID }) => ({\n    x: 0,\n    y: 0,\n    width: windowWidth,\n    height: windowHeight,\n    fill: 'currentColor',\n    mask: `url(#${maskID})`,\n  }),\n  clickArea: ({ windowWidth, windowHeight, clipID }) => ({\n    x: 0,\n    y: 0,\n    width: windowWidth,\n    height: windowHeight,\n    fill: 'currentcolor',\n    pointerEvents: 'auto',\n    clipPath: `url(#${clipID})`,\n  }),\n  highlightedArea: ({ x, y, width, height }) => ({\n    x,\n    y,\n    width,\n    height,\n    pointerEvents: 'auto',\n    fill: 'transparent',\n    display: 'none',\n  }),\n}\n\nexport type getStylesType = (key: StylesKeys, extra?: any) => {}\n\nexport function stylesMatcher(styles: StylesObj) {\n  return (key: StyleKey, state: {}): CSSObject => {\n    const base = defaultStyles[key](state)\n    const custom = styles[key]\n    return custom ? custom(base, state) : base\n  }\n}\n","/** @jsx jsx */\nimport { jsx } from '@emotion/react'\nimport React, { MouseEventHandler } from 'react'\nimport { StylesObj, stylesMatcher } from './styles'\nimport { safe, getWindow, getPadding, RectResult } from '@reactour/utils'\n\nconst Mask: React.FC<MaskProps> = ({\n  padding = 10,\n  onClick,\n  onClickHighlighted,\n  styles = {},\n  sizes,\n  className,\n  highlightedAreaClassName,\n  maskId,\n  clipId,\n}) => {\n  const maskID = maskId || uniqueId('mask__')\n  const clipID = clipId || uniqueId('clip__')\n  const getStyles = stylesMatcher(styles)\n  const [px, py] = getPadding(padding)\n  const { w: windowWidth, h: windowHeight } = getWindow()\n  const width = safe(sizes?.width + px * 2)\n  const height = safe(sizes?.height + py * 2)\n  const top = safe(sizes?.top - py)\n  const left = safe(sizes?.left - px)\n\n  return (\n    <div\n      css={getStyles('maskWrapper', {})}\n      onClick={onClick}\n      className={className}\n    >\n      <svg\n        width={windowWidth}\n        height={windowHeight}\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <defs>\n          <mask id={maskID}>\n            <rect\n              x={0}\n              y={0}\n              width={windowWidth}\n              height={windowHeight}\n              fill=\"white\"\n            />\n            <rect\n              css={getStyles('maskArea', {\n                x: left,\n                y: top,\n                width,\n                height,\n              })}\n            />\n          </mask>\n          <clipPath id={clipID}>\n            <polygon\n              points={`0 0, 0 ${windowHeight}, ${left} ${windowHeight}, ${left} ${top}, ${left +\n                width} ${top}, ${left + width} ${top + height}, ${left} ${top +\n                height}, ${left} ${windowHeight}, ${windowWidth} ${windowHeight}, ${windowWidth} 0`}\n            />\n          </clipPath>\n        </defs>\n\n        {/* The actual Mask */}\n        <rect\n          css={getStyles('maskRect', {\n            windowWidth,\n            windowHeight,\n            maskID,\n          })}\n        />\n        {/* The clickable area */}\n        <rect\n          css={getStyles('clickArea', {\n            windowWidth,\n            windowHeight,\n            top,\n            left,\n            width,\n            height,\n            clipID,\n          })}\n        />\n        <rect\n          css={getStyles('highlightedArea', {\n            x: left,\n            y: top,\n            width,\n            height,\n          })}\n          className={highlightedAreaClassName}\n          onClick={onClickHighlighted}\n        />\n      </svg>\n    </div>\n  )\n}\n\nexport type MaskProps = {\n  children?: React.ReactNode\n  sizes: RectResult\n  styles?: StylesObj\n  className?: string\n  highlightedAreaClassName?: string\n  padding?: number | [number, number]\n  onClick?: MouseEventHandler<HTMLDivElement>\n  onClickHighlighted?: MouseEventHandler<SVGRectElement>\n  maskId?: string\n  clipId?: string\n}\n\nexport default Mask\n\nfunction uniqueId(prefix: string) {\n  return (\n    prefix +\n    Math.random()\n      .toString(36)\n      .substring(2, 16)\n  )\n}\n"],"names":["defaultStyles","maskWrapper","opacity","left","top","position","zIndex","pointerEvents","color","maskArea","x","y","width","height","fill","rx","maskRect","windowWidth","windowHeight","maskID","mask","clickArea","clipID","clipPath","highlightedArea","display","stylesMatcher","styles","key","state","base","custom","Mask","padding","onClick","onClickHighlighted","sizes","className","highlightedAreaClassName","maskId","clipId","uniqueId","getStyles","getPadding","px","py","getWindow","w","h","safe","jsx","css","xmlns","id","points","prefix","Math","random","toString","substring"],"mappings":"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"}